{"version":3,"sources":["components/PhonebookCard/index.jsx","components/Title/index.jsx","components/Section/index.jsx","components/Button/index.jsx","components/Form/index.jsx","components/ContactsList/index.jsx","App.js","index.js"],"names":["PhonebookCard","styled","div","Title","h2","attrs","children","title","props","fontSize","textAlign","padding","Section","tagName","as","Button","button","Label","label","FormButton","Form","state","name","number","clearValue","e","setState","handleSubmit","handleChange","target","getAttribute","value","onSubmit","this","type","required","id","onChange","Component","Contacts","ul","ContactsListitem","li","ContactsList","contactsList","filter","list","contact","toLowerCase","includes","length","map","join","data-id","App","contacts","preventDefault","duplicate","elements","alert","uuidv4","handleClick","hasAttribute","slice","toDel","dataset","index","indexOf","splice","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a32a551d.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst PhonebookCard = styled.div`\r\n width: 600px;\r\n margin: 0 auto;\r\n padding: 15px;\r\n background: white;\r\n border-radius: 10px;\r\n box-shadow: 4px 2px 12px rgba(0, 0, 0, 0.8) \r\n`\r\nexport default PhonebookCard;","import styled from 'styled-components';\r\n\r\nconst Title = styled.h2.attrs(({title}) => ({\r\n    children: title || 'Title',\r\n}))`\r\n color: #212121;\r\n font-size: ${props => props.fontSize || 22}px;\r\n text-align: ${props => props.textAlign || 'center'};\r\n padding: ${props => props.padding || 10}px 0;\r\n font-weight: bold;\r\n`\r\nexport default Title;","import PropTypes from 'prop-types';\r\nimport Title from '../Title';\r\n\r\nconst Section = ({ title, fontSize, padding, tagName, children }) => {\r\n    return (\r\n        <>\r\n            <Title as={tagName} title={title} fontSize={fontSize} padding={padding}/>\r\n            {children}\r\n        </>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    as: PropTypes.string,\r\n    title: PropTypes.string,\r\n    fontSize: PropTypes.number,\r\n    padding: PropTypes.number,\r\n}\r\n\r\nexport default Section;","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n margin-bottom: 10px;\r\n background: white;\r\n color: #717171;\r\n font-size: 12px;\r\n font-weight: bold;\r\n padding: 4px 10px;\r\n border: 1px solid #212121;\r\n border-radius: 4px;\r\n`\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Button from \"../Button\";\r\n\r\nconst Label = styled.label`\r\n&:first-child {\r\n  margin-right: 10px;\r\n}\r\n`\r\nconst FormButton = styled(Button)`\r\nmargin-left: 10px;\r\nmargin-top: 10px;\r\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.4);\r\n &:hover {\r\n     color: #212121;\r\n }\r\n &:focus {\r\n     outline: none;\r\n     border: 1px solid #212121;\r\n }\r\n &:active {\r\n     box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);\r\n }\r\n &:not(:last-child) {\r\n     margin-right: 8px;\r\n }\r\n`\r\nexport { FormButton };\r\nexport default class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n  clearValue = (e) => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n    this.props.handleSubmit(e);\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.getAttribute(\"id\")]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.clearValue}>\r\n        <Label><strong>Name</strong><br/>\r\n          <Button as=\"input\"\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <br/>\r\n        <Label><strong>Number</strong><br/>\r\n          <Button as=\"input\"\r\n            type=\"tel\"\r\n            required\r\n            id=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Label>\r\n        <br/>\r\n        <FormButton>Add contact</FormButton>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import styled from 'styled-components';\r\nimport { FormButton } from \"../Form\";\r\n\r\nconst Contacts = styled.ul`\r\n  list-style-type: none;\r\n`\r\nconst ContactsListitem = styled.li`\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`\r\n\r\nconst ContactsList = ({ contactsList, filter }) => {\r\n  let list = contactsList.filter( contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n  if (!list.length) list = contactsList;\r\n  return (\r\n    <Contacts>\r\n      {list.map(li => (<ContactsListitem key={li.id} name={li.name} number={li.number}>\r\n        <span>{[li.name, li.number].join(', ')}</span>\r\n        <FormButton data-id={li.id}>Delete</FormButton>\r\n      </ContactsListitem>))}\r\n    </Contacts>\r\n  )\r\n}\r\n\r\nexport default ContactsList","import React, { Component } from \"react\";\nimport PhonebookCard from \"./components/PhonebookCard\";\nimport Section from \"./components/Section\";\nimport Form from \"./components/Form\";\nimport ContactsList from \"./components/ContactsList\";\nimport Button from \"./components/Button\";\nimport Title from \"./components/Title\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const duplicate = this.state.contacts.filter(\n      (contact) => contact.name === e.target.elements[0].value\n    );\n    if (duplicate.length)\n      return alert(`${duplicate[0].name} is already in contacts`);\n    this.setState({\n      contacts: [\n        ...this.state.contacts,\n        {\n          name: e.target.elements[0].value,\n          number: e.target.elements[1].value,\n          id: uuidv4(),\n        },\n      ],\n    });\n    e.target.elements[0].value = \"\";\n    e.target.elements[1].value = \"\";\n  };\n  handleChange = (e) => {\n    this.setState({ [e.target.getAttribute(\"id\")]: e.target.value });\n  };\n  handleClick = (e) => {\n    if (e.target.hasAttribute(\"data-id\")) {\n      const contacts = this.state.contacts.slice();\n      const toDel = contacts.filter(\n        (contact) => contact.id === e.target.dataset.id\n      );\n      const index = contacts.indexOf(toDel[0]);\n      contacts.splice(index, 1);\n      this.setState({\n        contacts: contacts,\n        filter: \"\",\n      });\n    }\n  };\n  render() {\n    return (\n      <>\n        <Section\n          title=\"My Phonebook App\"\n          fontSize={30}\n          padding={20}\n          tagName=\"h1\"\n        />\n        <PhonebookCard onClick={this.handleClick}>\n          <Section title=\"Phonebook\">\n            <Form\n              handleSubmit={this.handleSubmit}\n              handleChange={this.handleChange}\n            />\n          </Section>\n          <Section title=\"Contacts\">\n            <Title\n              as=\"h3\"\n              title=\"Find contacts by name\"\n              fontSize=\"16\"\n              textAlign=\"left\"\n            />\n            <Button\n              as=\"input\"\n              type=\"text\"\n              id=\"filter\"\n              onChange={this.handleChange}\n              value={this.state.filter}\n            />\n            <ContactsList\n              contactsList={this.state.contacts}\n              filter={this.state.filter}\n            />\n          </Section>\n        </PhonebookCard>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}